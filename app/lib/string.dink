//Get String length
FUNC str_len(str: *char): word
	DEFINE index: word = 0
	WHILE str[index] != 0
		SET index = index + 1
	ENDWHILE
	RETURN index
ENDFUNC


//String compare
FUNC str_cmp(left: *char, right: *char): char
	DEFINE index: word = 0
	WHILE left[index] == right[index]
		IF left[index] == 0
			RETURN TRUE
		ENDIF
		SET index = index + 1
	ENDWHILE
	RETURN FALSE
ENDFUNC



//Copy a string
FUNC str_copy(src: *char, dest: *char)
	DEFINE index: word = 0
	WHILE src[index] != 0
		SET dest[index] = src[index]
		SET index = index+1
	ENDWHILE
	dest[index] = 0
ENDFUNC


//Written in assembler for speed sake
FUNC word_to_string(num: word): *char
	CONST convert_digit: *word = 0xFF10
	CONST digit: *char = 0xFF12
	CONST str: *char = 0x8000
	SET *convert_digit = num

	MOV (word)0x8000 -> IDX
	ENTRY :loop_word_to_string
		MOV digit -> A
		MOV A -> MIX (0000)
		ALU A | 0 -> NUL
		JE :return_word_to_string
		ALU IDX+1 -> IDX
	GOTO :loop_word_to_string
	ENTRY :return_word_to_string
	RETURN &str
ENDFUNC